// routes/dropdownOptions.js
import express from "express";
import DropdownOption from "../models/DropdownOption.js"; // ‚úÖ import model

const router = express.Router();

const displayNames = {
  cccdReaderType: "Lo·∫°i ƒë·∫ßu ƒë·ªçc CCCD",
  deviceType: "Lo·∫°i thi·∫øt b·ªã",
  priorityLevel: "M·ª©c ƒë·ªô ∆∞u ti√™n",
  hopStatus: "Tr·∫°ng th√°i l√†m vi·ªác v·ªõi b·ªánh vi·ªán",
  devStatus: "Tr·∫°ng th√°i l√†m vi·ªác v·ªõi dev",
  requestStatus: "Tr·∫°ng th√°i x·ª≠ l√Ω y√™u c·∫ßu",
};

// GET dropdown options
router.get("/", async (req, res) => {
  let existing = await DropdownOption.findOne();
  if (!existing) {
    existing = await DropdownOption.create({
      options: {
        cccdReaderType: ["ComQ", "AIOT"],
        deviceType: ["27inch", "32inch"],
        priorityLevel: [
          "B√¨nh th∆∞·ªùng (1 tu·∫ßn - 3 tu·∫ßn)",
          "G·∫•p (2 - 3 ng√†y)",
          "H·ªèa t·ªëc (Trong ng√†y)",
        ],
        hopStatus: ["Ch∆∞a t√≠ch h·ª£p", "ƒê√£ t√≠ch h·ª£p", "Chuy·ªÉn nghi·ªám thu", "H·ªßy y√™u c·∫ßu", "ƒê√£ nghi·ªám thu"],
        devStatus: ["Ch·ªù dev build update", "Test th√¥ng api & chuy·ªÉn dev"],
        requestStatus: ["Ch∆∞a x·ª≠ l√Ω", "ƒê√£ x·ª≠ l√Ω", "ƒê√£ x·ª≠ l√Ω xong", "H·ªßy y√™u c·∫ßu"],
      },
    });
  }

  res.json(existing.options);
});

// PUT update dropdown options
router.put("/", async (req, res) => {
  const { options } = req.body;

  console.log("üì• options nh·∫≠n ƒë∆∞·ª£c:", JSON.stringify(options, null, 2)); // ‚Üê th√™m d√≤ng n√†y

  if (!options || typeof options !== "object") {
    return res.status(400).json({ error: "Thi·∫øu ho·∫∑c sai c·∫•u tr√∫c 'options'" });
  }

  let existing = await DropdownOption.findOne();
  if (!existing) {
    existing = await DropdownOption.create({ options });
  } else {
    existing.options = options;
    await existing.save();
  }

  res.json({ message: "‚úÖ L∆∞u th√†nh c√¥ng", options: existing.options });
});



export default router;